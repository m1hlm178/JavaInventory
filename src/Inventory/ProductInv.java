/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//PENDING PENAMBAHAN HISTORY PRICE

package Inventory;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import stokbarangpddj.ToolAndClass.Conn;
import stokbarangpddj.MenuUtama;
import stokbarangpddj.ToolAndClass.AllClass;
import stokbarangpddj.ToolAndClass.Tools;

/**
 *
 * @author Susanto
 */
public class ProductInv extends javax.swing.JInternalFrame {
private String ComboAdd=" ";
private String itemname=" ";
private String selectcat;
private String IDCatGlob;
private List<String> IDCat = new ArrayList<String>();
    /**
     * Creates new form Product
     */
    public ProductInv() throws SQLException {
        initComponents();
        Conn.rowSet.setCommand("select name from category");
        Conn.rowSet.execute();
        while (Conn.rowSet.next()) {
                ComboAdd=Conn.rowSet.getString(1);
                CmbxCat.addItem(ComboAdd); 
        }
        updateTable();
        ComboxCat();
    }
    
    public void ComboxCat(){
    try {
        if(IDCat.size()>1){
            IDCat.clear();
        }
        IDCat.add("0");
        Conn.rowSet.setCommand("select idCategory,name from category");
        Conn.rowSet.execute();
        while (Conn.rowSet.next()) {
                IDCat.add(Conn.rowSet.getString(1));
                ComboAdd=Conn.rowSet.getString(2);
                ComboCat.addItem(this.ComboAdd); 
        }
    } catch (SQLException ex) {
        Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    public void updateTable(){
		try {
                        DefaultTableModel Table = (DefaultTableModel) ProductTab.getModel();
                        while(Table.getRowCount() > 0) Table.removeRow(0);
			Conn.rowSet.setCommand("select a.idinventory,a.name,b.name,a.unit,a.qty from inventory a, category b where a.idCategory = b.idCategory");
			Conn.rowSet.execute();
			while(Conn.rowSet.next())
                        {
                            Table.addRow(new Object[]{Conn.rowSet.getString(1),Conn.rowSet.getString(2),Conn.rowSet.getString(3),Conn.rowSet.getString(4),Conn.rowSet.getInt(5)});
                        }
		} catch (SQLException ex) {
			Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
		}
    }
    
    public void CategoryOrder(){
		try {
                    if(this.IDCatGlob.equals("0")){
                        updateTable();
                    }else{
                        DefaultTableModel Table = (DefaultTableModel) ProductTab.getModel();
                        while(Table.getRowCount() > 0) Table.removeRow(0);
			Conn.rowSet.setCommand("select a.idinventory,a.name,b.name,a.unit,a.qty from inventory a, category b where a.idCategory = b.idCategory and a.idCategory = '"+this.IDCatGlob+"'");
			Conn.rowSet.execute();
			while(Conn.rowSet.next())
                        {
                            Table.addRow(new Object[]{Conn.rowSet.getString(1),Conn.rowSet.getString(2),Conn.rowSet.getString(3),Conn.rowSet.getString(4),Conn.rowSet.getInt(5)});
                        }
                    }
		} catch (SQLException ex) {
			Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
		}
    }
    
    private void clear(){
        TXTName.setText("");
        IDINV.setText("");
        TXTUnit.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        TXTName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTab = new javax.swing.JTable();
        CmbxCat = new javax.swing.JComboBox();
        UpdateBut = new javax.swing.JButton();
        AddBut = new javax.swing.JButton();
        DeleteBut = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        IDINV = new javax.swing.JLabel();
        TXTUnit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ComboCat = new javax.swing.JComboBox();
        BackBut = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(900, 597));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Product", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        ProductTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Category", "Unit", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProductTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductTab);
        if (ProductTab.getColumnModel().getColumnCount() > 0) {
            ProductTab.getColumnModel().getColumn(0).setResizable(false);
            ProductTab.getColumnModel().getColumn(0).setPreferredWidth(3);
        }

        CmbxCat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select..." }));
        CmbxCat.setName(""); // NOI18N

        UpdateBut.setText("Update");
        UpdateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButActionPerformed(evt);
            }
        });

        AddBut.setText("Add");
        AddBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButActionPerformed(evt);
            }
        });

        DeleteBut.setText("Delete");
        DeleteBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButActionPerformed(evt);
            }
        });

        jLabel4.setText("ID INVENTORY :");

        IDINV.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        IDINV.setText("0");

        TXTUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TXTUnitKeyReleased(evt);
            }
        });

        jLabel5.setText("Name Product");

        jLabel7.setText("Category");

        jLabel9.setText("Unit");

        jLabel10.setText(":");

        jLabel11.setText(":");

        jLabel13.setText(":");

        jLabel1.setText("Category");

        jLabel12.setText(":");

        ComboCat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select..." }));
        ComboCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboCatItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CmbxCat, 0, 268, Short.MAX_VALUE)
                            .addComponent(TXTUnit)
                            .addComponent(TXTName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 38, Short.MAX_VALUE)
                                .addComponent(AddBut, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDINV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(UpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteBut, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TXTName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CmbxCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DeleteBut, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AddBut, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXTUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(jLabel4)
                    .addComponent(IDINV)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12)
                    .addComponent(ComboCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BackBut, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackBut, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        MenuUtama MenuUtama = new MenuUtama();
        Tools.change(this, MenuUtama);
        // TODO add your handling code here:
    }//GEN-LAST:event_BackButActionPerformed

    private void UpdateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButActionPerformed

        if(IDINV.getText().isEmpty() == true)
        {
            JOptionPane.showMessageDialog(null, "Please Select Your Item First!!","ERROR!!",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        try {
            Conn.rowSet.setCommand("select * from inventory where idinventory = '"+ IDINV.getText() +"'");
            Conn.rowSet.execute();
//            Conn.rowSet.first();
            Conn.rowSet.next();
            Conn.rowSet.updateString("name", TXTName.getText());
            Conn.rowSet.updateString("unit", TXTUnit.getText());
            Conn.rowSet.updateRow();
            updateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateButActionPerformed

    private void DeleteButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButActionPerformed
    if(IDINV.getText().isEmpty() == true)
        {
            JOptionPane.showMessageDialog(null, "Please Select Your Item First!!","ERROR!!",JOptionPane.ERROR_MESSAGE);
        }
        else
        {       
        try {
                    Conn.rowSet.setCommand("select * from hist_price");
                    Conn.rowSet.execute();
                    while (Conn.rowSet.next()) {
                        if(Conn.rowSet.getString("inventory_idinventory").equals(IDINV.getText())){
                            Conn.rowSet.deleteRow();
                        }
                    }
                    // TODO add your handling code here:
                    int baris = ProductTab.getSelectedRow();
                    Conn.rowSet.setCommand("select * from inventory");
                    Conn.rowSet.execute();
                    Conn.rowSet.next();
                    Conn.rowSet.absolute(baris+1);
                    System.out.println("Baris:"+baris);
                    Conn.rowSet.deleteRow();
                    updateTable();
            } catch (SQLException ex) {
                    Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
		clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteButActionPerformed

    private void ProductTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTabMouseClicked
        int baris = ProductTab.getSelectedRow();
        TXTName.setText(ProductTab.getValueAt(baris, 1).toString());
        IDINV.setText(ProductTab.getValueAt(baris, 0).toString());
        TXTUnit.setText(ProductTab.getValueAt(baris, 2).toString());
//        System.out.println(ProductTab.getValueAt(baris, 4).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductTabMouseClicked

    private void AddButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButActionPerformed
        if(TXTName.getText().isEmpty() == true || CmbxCat.getSelectedItem() == "Select..." || TXTUnit.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Your Data Is Not Complete!!","ERROR!!",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try {
                    String GenerateID = AllClass.GenerateID("inventory", "idinventory");
                    Conn.rowSet.setCommand("select * from category where Name = '"+ CmbxCat.getSelectedItem() +"' ");
                    Conn.rowSet.execute();
                    while (Conn.rowSet.next()) {
                            selectcat=Conn.rowSet.getString("idcategory");
                    }
                    Conn.rowSet.setCommand("select * from inventory");
                    Conn.rowSet.execute();
                    Conn.rowSet.first();
                    Conn.rowSet.moveToInsertRow();
                    Conn.rowSet.updateString("idinventory", GenerateID);
                    Conn.rowSet.updateString("name", TXTName.getText());
                    Conn.rowSet.updateString("idcategory", selectcat);
//                    Conn.rowSet.updateDouble("price_Sale", Double.parseDouble(TXTPrice.getText()));
                    Conn.rowSet.updateString("unit", TXTUnit.getText());
                    Conn.rowSet.insertRow();
                    updateTable();
            } catch (SQLException ex) {
                    Logger.getLogger(ProductInv.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Please Correct Your Data!!", "Warning" ,JOptionPane.WARNING_MESSAGE);
            }
        }
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_AddButActionPerformed

    private void TXTUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTUnitKeyReleased
        // TODO add your handling code here:
        if(TXTUnit.getText().isEmpty() == false)
        {

            if(Tools.isNumeric(TXTUnit.getText())==true)
            {
                JOptionPane.showMessageDialog(null, "Not Valid Input!!","ERROR!!",JOptionPane.ERROR_MESSAGE);
                TXTUnit.setText("");
            }
        }
    }//GEN-LAST:event_TXTUnitKeyReleased

    private void ComboCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboCatItemStateChanged
        this.IDCatGlob = IDCat.get(ComboCat.getSelectedIndex());
        CategoryOrder();
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboCatItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBut;
    private javax.swing.JButton BackBut;
    private javax.swing.JComboBox CmbxCat;
    private javax.swing.JComboBox ComboCat;
    private javax.swing.JButton DeleteBut;
    private javax.swing.JLabel IDINV;
    private javax.swing.JTable ProductTab;
    private javax.swing.JTextField TXTName;
    private javax.swing.JTextField TXTUnit;
    private javax.swing.JButton UpdateBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
